//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KPIAgent.KPTransaction {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MLHUILLIERSoap", Namespace="http://tempuri.org/")]
    public partial class MLHUILLIER : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getDomesticSOOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDomesticPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSOKPTNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSOCancelKPTNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPOKPTNOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPOcancelKPTNOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkIfCanConnectOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MLHUILLIER() {
            this.Url = global::KPIAgent.Properties.Settings.Default.KPIAgent_KPTransaction_MLHUILLIER;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getDomesticSOCompletedEventHandler getDomesticSOCompleted;
        
        /// <remarks/>
        public event getDomesticPOCompletedEventHandler getDomesticPOCompleted;
        
        /// <remarks/>
        public event getSOKPTNCompletedEventHandler getSOKPTNCompleted;
        
        /// <remarks/>
        public event getSOCancelKPTNCompletedEventHandler getSOCancelKPTNCompleted;
        
        /// <remarks/>
        public event getPOKPTNCompletedEventHandler getPOKPTNCompleted;
        
        /// <remarks/>
        public event getPOcancelKPTNCompletedEventHandler getPOcancelKPTNCompleted;
        
        /// <remarks/>
        public event checkIfCanConnectCompletedEventHandler checkIfCanConnectCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDomesticSO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KPTrans getDomesticSO(string TransDate, string BranchCode, string SiteCode) {
            object[] results = this.Invoke("getDomesticSO", new object[] {
                        TransDate,
                        BranchCode,
                        SiteCode});
            return ((KPTrans)(results[0]));
        }
        
        /// <remarks/>
        public void getDomesticSOAsync(string TransDate, string BranchCode, string SiteCode) {
            this.getDomesticSOAsync(TransDate, BranchCode, SiteCode, null);
        }
        
        /// <remarks/>
        public void getDomesticSOAsync(string TransDate, string BranchCode, string SiteCode, object userState) {
            if ((this.getDomesticSOOperationCompleted == null)) {
                this.getDomesticSOOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDomesticSOOperationCompleted);
            }
            this.InvokeAsync("getDomesticSO", new object[] {
                        TransDate,
                        BranchCode,
                        SiteCode}, this.getDomesticSOOperationCompleted, userState);
        }
        
        private void OngetDomesticSOOperationCompleted(object arg) {
            if ((this.getDomesticSOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDomesticSOCompleted(this, new getDomesticSOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getDomesticPO", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KPTrans getDomesticPO(string TransDate, string BranchCode, string SiteCode) {
            object[] results = this.Invoke("getDomesticPO", new object[] {
                        TransDate,
                        BranchCode,
                        SiteCode});
            return ((KPTrans)(results[0]));
        }
        
        /// <remarks/>
        public void getDomesticPOAsync(string TransDate, string BranchCode, string SiteCode) {
            this.getDomesticPOAsync(TransDate, BranchCode, SiteCode, null);
        }
        
        /// <remarks/>
        public void getDomesticPOAsync(string TransDate, string BranchCode, string SiteCode, object userState) {
            if ((this.getDomesticPOOperationCompleted == null)) {
                this.getDomesticPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDomesticPOOperationCompleted);
            }
            this.InvokeAsync("getDomesticPO", new object[] {
                        TransDate,
                        BranchCode,
                        SiteCode}, this.getDomesticPOOperationCompleted, userState);
        }
        
        private void OngetDomesticPOOperationCompleted(object arg) {
            if ((this.getDomesticPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDomesticPOCompleted(this, new getDomesticPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSOKPTN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KPTrans getSOKPTN(string Type, string SOkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            object[] results = this.Invoke("getSOKPTN", new object[] {
                        Type,
                        SOkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId});
            return ((KPTrans)(results[0]));
        }
        
        /// <remarks/>
        public void getSOKPTNAsync(string Type, string SOkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            this.getSOKPTNAsync(Type, SOkptn, LastTransDate, BranchCode, SiteCode, userId, null);
        }
        
        /// <remarks/>
        public void getSOKPTNAsync(string Type, string SOkptn, string LastTransDate, string BranchCode, string SiteCode, string userId, object userState) {
            if ((this.getSOKPTNOperationCompleted == null)) {
                this.getSOKPTNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSOKPTNOperationCompleted);
            }
            this.InvokeAsync("getSOKPTN", new object[] {
                        Type,
                        SOkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId}, this.getSOKPTNOperationCompleted, userState);
        }
        
        private void OngetSOKPTNOperationCompleted(object arg) {
            if ((this.getSOKPTNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSOKPTNCompleted(this, new getSOKPTNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSOCancelKPTN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KPTrans getSOCancelKPTN(string Type, string SOkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            object[] results = this.Invoke("getSOCancelKPTN", new object[] {
                        Type,
                        SOkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId});
            return ((KPTrans)(results[0]));
        }
        
        /// <remarks/>
        public void getSOCancelKPTNAsync(string Type, string SOkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            this.getSOCancelKPTNAsync(Type, SOkptn, LastTransDate, BranchCode, SiteCode, userId, null);
        }
        
        /// <remarks/>
        public void getSOCancelKPTNAsync(string Type, string SOkptn, string LastTransDate, string BranchCode, string SiteCode, string userId, object userState) {
            if ((this.getSOCancelKPTNOperationCompleted == null)) {
                this.getSOCancelKPTNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSOCancelKPTNOperationCompleted);
            }
            this.InvokeAsync("getSOCancelKPTN", new object[] {
                        Type,
                        SOkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId}, this.getSOCancelKPTNOperationCompleted, userState);
        }
        
        private void OngetSOCancelKPTNOperationCompleted(object arg) {
            if ((this.getSOCancelKPTNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSOCancelKPTNCompleted(this, new getSOCancelKPTNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPOKPTN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KPTrans getPOKPTN(string Type, string POkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            object[] results = this.Invoke("getPOKPTN", new object[] {
                        Type,
                        POkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId});
            return ((KPTrans)(results[0]));
        }
        
        /// <remarks/>
        public void getPOKPTNAsync(string Type, string POkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            this.getPOKPTNAsync(Type, POkptn, LastTransDate, BranchCode, SiteCode, userId, null);
        }
        
        /// <remarks/>
        public void getPOKPTNAsync(string Type, string POkptn, string LastTransDate, string BranchCode, string SiteCode, string userId, object userState) {
            if ((this.getPOKPTNOperationCompleted == null)) {
                this.getPOKPTNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPOKPTNOperationCompleted);
            }
            this.InvokeAsync("getPOKPTN", new object[] {
                        Type,
                        POkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId}, this.getPOKPTNOperationCompleted, userState);
        }
        
        private void OngetPOKPTNOperationCompleted(object arg) {
            if ((this.getPOKPTNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPOKPTNCompleted(this, new getPOKPTNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPOcancelKPTN", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public KPTrans getPOcancelKPTN(string Type, string POcancelkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            object[] results = this.Invoke("getPOcancelKPTN", new object[] {
                        Type,
                        POcancelkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId});
            return ((KPTrans)(results[0]));
        }
        
        /// <remarks/>
        public void getPOcancelKPTNAsync(string Type, string POcancelkptn, string LastTransDate, string BranchCode, string SiteCode, string userId) {
            this.getPOcancelKPTNAsync(Type, POcancelkptn, LastTransDate, BranchCode, SiteCode, userId, null);
        }
        
        /// <remarks/>
        public void getPOcancelKPTNAsync(string Type, string POcancelkptn, string LastTransDate, string BranchCode, string SiteCode, string userId, object userState) {
            if ((this.getPOcancelKPTNOperationCompleted == null)) {
                this.getPOcancelKPTNOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPOcancelKPTNOperationCompleted);
            }
            this.InvokeAsync("getPOcancelKPTN", new object[] {
                        Type,
                        POcancelkptn,
                        LastTransDate,
                        BranchCode,
                        SiteCode,
                        userId}, this.getPOcancelKPTNOperationCompleted, userState);
        }
        
        private void OngetPOcancelKPTNOperationCompleted(object arg) {
            if ((this.getPOcancelKPTNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPOcancelKPTNCompleted(this, new getPOcancelKPTNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkIfCanConnect", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string checkIfCanConnect(string database) {
            object[] results = this.Invoke("checkIfCanConnect", new object[] {
                        database});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkIfCanConnectAsync(string database) {
            this.checkIfCanConnectAsync(database, null);
        }
        
        /// <remarks/>
        public void checkIfCanConnectAsync(string database, object userState) {
            if ((this.checkIfCanConnectOperationCompleted == null)) {
                this.checkIfCanConnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckIfCanConnectOperationCompleted);
            }
            this.InvokeAsync("checkIfCanConnect", new object[] {
                        database}, this.checkIfCanConnectOperationCompleted, userState);
        }
        
        private void OncheckIfCanConnectOperationCompleted(object arg) {
            if ((this.checkIfCanConnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkIfCanConnectCompleted(this, new checkIfCanConnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class KPTrans {
        
        private int respcodeField;
        
        private string respmsgField;
        
        private string respdataField;
        
        /// <remarks/>
        public int respcode {
            get {
                return this.respcodeField;
            }
            set {
                this.respcodeField = value;
            }
        }
        
        /// <remarks/>
        public string respmsg {
            get {
                return this.respmsgField;
            }
            set {
                this.respmsgField = value;
            }
        }
        
        /// <remarks/>
        public string respdata {
            get {
                return this.respdataField;
            }
            set {
                this.respdataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getDomesticSOCompletedEventHandler(object sender, getDomesticSOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDomesticSOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDomesticSOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KPTrans Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KPTrans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getDomesticPOCompletedEventHandler(object sender, getDomesticPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDomesticPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDomesticPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KPTrans Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KPTrans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getSOKPTNCompletedEventHandler(object sender, getSOKPTNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSOKPTNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSOKPTNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KPTrans Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KPTrans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getSOCancelKPTNCompletedEventHandler(object sender, getSOCancelKPTNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSOCancelKPTNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSOCancelKPTNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KPTrans Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KPTrans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getPOKPTNCompletedEventHandler(object sender, getPOKPTNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPOKPTNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPOKPTNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KPTrans Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KPTrans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void getPOcancelKPTNCompletedEventHandler(object sender, getPOcancelKPTNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPOcancelKPTNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPOcancelKPTNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public KPTrans Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((KPTrans)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void checkIfCanConnectCompletedEventHandler(object sender, checkIfCanConnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkIfCanConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkIfCanConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591